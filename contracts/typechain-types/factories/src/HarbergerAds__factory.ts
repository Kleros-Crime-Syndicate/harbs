/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  HarbergerAds,
  HarbergerAdsInterface,
} from "../../src/HarbergerAds";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_taxRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cooldownPeriod",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_currency",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_ipfsUri",
        type: "string",
      },
    ],
    name: "AdSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_offer",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_valuation",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fund",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_valuation",
        type: "uint256",
      },
    ],
    name: "changeValuation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "collect",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "defund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "dueTaxes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "fund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "minimumFund",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_ipfsUri",
        type: "string",
      },
    ],
    name: "setAd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "taxesPerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x61010060405234801561001157600080fd5b5060405161164438038061164483398101604081905261003091610050565b6080929092526001600160a01b0390911660c05260a0523360e052610096565b60008060006060848603121561006557600080fd5b83516020850151604086015191945092506001600160a01b038116811461008b57600080fd5b809150509250925092565b60805160a05160c05160e05161150561013f6000396000818161036a0152818161086d01528181610d0101528181610e0d0152610fff01526000818161033b015281816104710152818161050b0152818161061601528181610798015281816108400152818161097a01528181610b7a01528181610c2d01528181610cd401528181610de0015261102e015260008181610a970152610eb50152600061091501526115056000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad578063c397ae3911610071578063c397ae391461028f578063ce3f865f146102a2578063cf264e9a146102b5578063e6d28063146102c8578063e985e9c5146102db57600080fd5b806370a08231146102395780638a784c4a1461024d578063a22cb46514610260578063a65e2cfd1461026e578063b88d4fde1461028157600080fd5b806323b872dd116100f457806323b872dd146101cb57806337966404146101d957806342842e0e146101cb5780635a8b754d146101fa5780636352211e1461020d57600080fd5b806301ffc9a714610131578063081812fc1461016a578063095ea7b3146101955780631281311d146101a557806320c5429b146101b8575b600080fd5b61015561013f3660046110f9565b6001600160e01b03191663861c59cd60e01b1490565b60405190151581526020015b60405180910390f35b61017d610178366004611123565b6102e9565b6040516001600160a01b039091168152602001610161565b6101a361012c366004611158565b005b6101a36101b3366004611182565b6102f0565b6101a36101c6366004611123565b6106ef565b6101a361012c3660046111b4565b6101ec6101e7366004611123565b6108a9565b604051908152602001610161565b6101ec610208366004611123565b6108e8565b61017d61021b366004611123565b6000908152602081905260409020600401546001600160a01b031690565b6101ec6102473660046111f0565b50600090565b6101ec61025b366004611123565b61090a565b6101a361012c36600461121c565b6101a361027c366004611253565b610954565b6101a361012c3660046112be565b6101a361029d366004611253565b610a3f565b6101a36102b0366004611123565b610d9f565b6101a36102c3366004611253565b610e53565b6101a36102d636600461132d565b610f36565b610155610178366004611379565b6000806000fd5b600084815260208190526040812090610308866108a9565b905081600301548111156103ec57610324868360030154610fd9565b6040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906103949033907f0000000000000000000000000000000000000000000000000000000000000000908a906004016113ac565b602060405180830381600087803b1580156103ae57600080fd5b505af11580156103c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e691906113d0565b506105b4565b81548510156104325760405162461bcd60e51b815260206004820152600d60248201526c2637bbb130b6361037b33332b960991b60448201526064015b60405180910390fd5b610440868360030154610fd9565b600482810154600384015460405163a9059cbb60e01b81526001600160a01b039283169381019390935260248301527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b1580156104b557600080fd5b505af11580156104c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ed91906113d0565b506004808301546040516323b872dd60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116936323b872dd9361054693339391909116918b91016113ac565b602060405180830381600087803b15801561056057600080fd5b505af1158015610574573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059891906113d0565b6105b45760405162461bcd60e51b8152600401610429906113ed565b6105bd846108e8565b8310156105ff5760405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f7567682066756e647360801b6044820152606401610429565b6040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd9061064f903390309088906004016113ac565b602060405180830381600087803b15801561066957600080fd5b505af115801561067d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a191906113d0565b6106bd5760405162461bcd60e51b8152600401610429906113ed565b506004810180546001600160a01b03191633179055600381019190915590815542600182018190556002909101555050565b600081815260208190526040902060048101546001600160a01b031633146107455760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b6044820152606401610429565b6000610750836108a9565b905081600301548111610824576107678382610fd9565b600482810154600384015460405163a9059cbb60e01b81526001600160a01b039283169381019390935260248301527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044015b602060405180830381600087803b1580156107dd57600080fd5b505af11580156107f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081591906113d0565b5061081f836110cf565b505050565b600382015460405163a9059cbb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163a9059cbb916107c3917f0000000000000000000000000000000000000000000000000000000000000000916004016001600160a01b03929092168252602082015260400190565b6000818152602081905260408120805482906108c49061090a565b90508160020154426108d69190611429565b6108e09082611440565b949350505050565b6000806108f48361090a565b905061090381622819a0611440565b9392505050565b60008061271061093a7f000000000000000000000000000000000000000000000000000000000000000085611440565b610944919061145f565b90506109036301e133808261145f565b6000828152602081905260409081902090516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906109b3903390309087906004016113ac565b602060405180830381600087803b1580156109cd57600080fd5b505af11580156109e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0591906113d0565b610a215760405162461bcd60e51b8152600401610429906113ed565b81816003016000828254610a359190611481565b9091555050505050565b600082815260208190526040902060048101546001600160a01b03163314610a955760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b6044820152606401610429565b7f00000000000000000000000000000000000000000000000000000000000000008160010154610ac59190611481565b421015610b055760405162461bcd60e51b815260206004820152600e60248201526d57616974206d6f72652074696d6560901b6044820152606401610429565b6000610b10846108a9565b905081600301548111610cb857610b278482610fd9565b8160030154831015610bfc5782826003016000828254610b479190611429565b909155505060048281015460405163a9059cbb60e01b81526001600160a01b0391821692810192909252602482018590527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b158015610bbe57600080fd5b505af1158015610bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf691906113d0565b50610d99565b600482810154600384015460405163a9059cbb60e01b81526001600160a01b039283169381019390935260248301527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b158015610c7157600080fd5b505af1158015610c85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca991906113d0565b50610cb3846110cf565b610d99565b600382015460405163a9059cbb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163a9059cbb91610d3d917f0000000000000000000000000000000000000000000000000000000000000000916004016001600160a01b03929092168252602082015260400190565b602060405180830381600087803b158015610d5757600080fd5b505af1158015610d6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8f91906113d0565b50610d99846110cf565b50505050565b600081815260208190526040812090610db7836108a9565b905081600301548110610e4957600382015460405163a9059cbb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163a9059cbb916107c3917f0000000000000000000000000000000000000000000000000000000000000000916004016001600160a01b03929092168252602082015260400190565b61081f8382610fd9565b600082815260208190526040902060048101546001600160a01b03163314610eaa5760405162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b6044820152606401610429565b8054821015610f29577f00000000000000000000000000000000000000000000000000000000000000008160010154610ee39190611481565b421015610f295760405162461bcd60e51b8152602060048201526014602482015273546f6f20736f6f6e20746f20646563726561736560601b6044820152606401610429565b9081554260019091015550565b600083815260208190526040902060048101546001600160a01b03163314610f985760405162461bcd60e51b815260206004820152601560248201527413db9b1e481bdddb995c8818da185b99d95cc81859605a1b6044820152606401610429565b7fae0663072bcb7f24f009e8ad0e7bd01cb00a189760d428d8ff269525830db407848484604051610fcb93929190611499565b60405180910390a150505050565b60008281526020819052604090819020905163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b15801561107257600080fd5b505af1158015611086573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110aa91906113d0565b50818160030160008282546110bf9190611429565b9091555050426002909101555050565b6000908152602081905260408120600381018290556004810180546001600160a01b031916905555565b60006020828403121561110b57600080fd5b81356001600160e01b03198116811461090357600080fd5b60006020828403121561113557600080fd5b5035919050565b80356001600160a01b038116811461115357600080fd5b919050565b6000806040838503121561116b57600080fd5b6111748361113c565b946020939093013593505050565b6000806000806080858703121561119857600080fd5b5050823594602084013594506040840135936060013592509050565b6000806000606084860312156111c957600080fd5b6111d28461113c565b92506111e06020850161113c565b9150604084013590509250925092565b60006020828403121561120257600080fd5b6109038261113c565b801515811461121957600080fd5b50565b6000806040838503121561122f57600080fd5b6112388361113c565b915060208301356112488161120b565b809150509250929050565b6000806040838503121561126657600080fd5b50508035926020909101359150565b60008083601f84011261128757600080fd5b50813567ffffffffffffffff81111561129f57600080fd5b6020830191508360208285010111156112b757600080fd5b9250929050565b6000806000806000608086880312156112d657600080fd5b6112df8661113c565b94506112ed6020870161113c565b935060408601359250606086013567ffffffffffffffff81111561131057600080fd5b61131c88828901611275565b969995985093965092949392505050565b60008060006040848603121561134257600080fd5b83359250602084013567ffffffffffffffff81111561136057600080fd5b61136c86828701611275565b9497909650939450505050565b6000806040838503121561138c57600080fd5b6113958361113c565b91506113a36020840161113c565b90509250929050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000602082840312156113e257600080fd5b81516109038161120b565b6020808252600c908201526b2130b2103a3930b739b332b960a11b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008282101561143b5761143b611413565b500390565b600081600019048311821515161561145a5761145a611413565b500290565b60008261147c57634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561149457611494611413565b500190565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f191601019291505056fea264697066735822122076b061145aba2f0b5cc943f929caf01e4ca71c7bad6b8dde00a54adb1b50837b64736f6c63430008090033";

type HarbergerAdsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HarbergerAdsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HarbergerAds__factory extends ContractFactory {
  constructor(...args: HarbergerAdsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _taxRate: PromiseOrValue<BigNumberish>,
    _cooldownPeriod: PromiseOrValue<BigNumberish>,
    _currency: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HarbergerAds> {
    return super.deploy(
      _taxRate,
      _cooldownPeriod,
      _currency,
      overrides || {}
    ) as Promise<HarbergerAds>;
  }
  override getDeployTransaction(
    _taxRate: PromiseOrValue<BigNumberish>,
    _cooldownPeriod: PromiseOrValue<BigNumberish>,
    _currency: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _taxRate,
      _cooldownPeriod,
      _currency,
      overrides || {}
    );
  }
  override attach(address: string): HarbergerAds {
    return super.attach(address) as HarbergerAds;
  }
  override connect(signer: Signer): HarbergerAds__factory {
    return super.connect(signer) as HarbergerAds__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HarbergerAdsInterface {
    return new utils.Interface(_abi) as HarbergerAdsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HarbergerAds {
    return new Contract(address, _abi, signerOrProvider) as HarbergerAds;
  }
}
